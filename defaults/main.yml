---
# General parameters #
kafka_is_install: false # A boolean value, whether install the Apache Kafka.
kafka_version: '2.6.2' # Specify the Kafka version.
kafka_cluster: 'cluster' # Cluster name of servers that implements distribution performance.
kafka_path: '/data' # Specify the Kafka working directory.
kafka_java_home: '/usr/lib/jvm/java' # Environment variable to point to an installed JDK.

# JVM memory Variables #
kafka_jvm_xmx: '4096' # Size of the heap in MB.

# Role dependencies #
kafka_zoo_dept: false # A boolean value, whether Zookeeper use the same environment.

# Kafka Eagle #
kafka_eagle_is_install: true # Whether install the Kafka Eagle.
kafka_eagle_version: '2.0.6' # Specify the Kafka Eagle version.
kafka_eagle_token: 'changeme' # Kafka topic delete token.

# ACL Variables #
kafka_enable_auth: false # Whether enable authentication using SASL.
kafka_zoo_client_arg: # Zookeeper authentication information.
  - user: 'kafka'
    pass: 'changeme'
#kafka_user_client_arg: # Client authentication information.
#  - user: 'somebody'
#    pass: 'changeme'

# Zookeeper parameters #
kafka_zoo_version: '3.5.9' # Specify the Zookeeper version.
kafka_zoo_cluster: 'zk-cluster01' # Name of Zookeeper cluster.
kafka_zoo_path: '/data' # Specify the Zookeeper working directory.
kafka_zoo_servers: # List of Zookeeper servers.
  - '127.0.0.1'
kafka_zoo_jvm_xmx: '2048' # Size of the heap in MB.
kafka_zoo_port: # Zookeeper server listens.
  admin: '18080' # The port the embedded Jetty server listens on.
  client: '2181' # Client Port.
  jmx: '9405' # Prometheus jmx_exporter listens.
  leader: '2888' # Leader communication.
  election: '3888' # Leader election.
kafka_zoo_enable_auth: false # Whether enable quorum authentication using SASL.
kafka_zoo_user_super_passwd: 'changeme' # Administrator priviledges user password.
kafka_zoo_user_client_arg: # Client authentication information.
  - user: 'kafka'
    passwd: 'changeme'

# Listen port #
kafka_port:
  socket: '9092' # Server listens.
  eagle: '8048' # Eagle webui.
  exporter: '9308' # Prometheus exporter listens.
  wrapper: '33000-33999' # A socket to communicate with its Java component running inside a JVM.
  wrapper_jvm: '34000-34999' # A socket to communicate with its Java component running inside a JVM.

# System Variables #
kafka_arg:
  num_network_threads: '10' # The number of threads that the server uses for receiving requests.
  num_io_threads: '20' # The number of threads that the server uses for processing requests.
  log_flush_interval_messages: '10000' # The number of messages to accept before forcing a flush of data to disk.
  log_flush_interval_ms: '1000' # The maximum amount of time a message can sit in a log before we force a flush.
  socket_send_buffer_bytes: '1048576' # The send buffer (SO_SNDBUF) used by the socket server.
  socket_receive_buffer_bytes: '1048576' # The receive buffer (SO_RCVBUF) used by the socket server.
  socket_request_max_bytes: '104857600' # The maximum size of a request that the socket server will accept.
  lc_ctype: 'zh_CN.UTF-8' # The language of messages.
  user: 'kafka' # Kafka running user.
  ulimit_core: 'unlimited' # The number of core dump launched by systemd.
  ulimit_nofile: '40960' # The number of files launched by systemd.
  ulimit_nproc: '40960' # The number of processes launched by systemd.
  wrapper_console_format: 'PM' # Format to use for output to the console.
  wrapper_console_loglevel: 'INFO' # Log level to use for console output.
  wrapper_java_command_loglevel: 'NONE' # Log level to use for Java command.
  wrapper_logfile: 'kafka.out' # Sets the path to the Wrapper log file.
  wrapper_logfile_format: 'ZM' # Format to use for logging to the log file.
  wrapper_logfile_loglevel: 'INFO' # Filters messages sent to the log file according to their log levels.
  wrapper_logfile_maxfiles: '25' # Controls the maximum number of rolled files.
  wrapper_logfile_maxsize: '50m' # Controls the maximum size of rolled files.
  wrapper_syslog_loglevel: 'NONE' # Log level to use for logging to the Event Log on syslog on UNIX systems.
  wrapper_ulimit_loglevel: 'STATUS' # Controls at which log level resource limits will be logged.

# Service Mesh #
environments: 'prd' # Define the service environment.
datacenter: 'dc01' # Define the DataCenter.
domain: 'local' # Define the Domain.
customer: 'demo' # Define the customer name.
#tags: # Define the service custom label.
#  subscription: 'default'
#  owner: 'nobody'
#  department: 'Infrastructure'
#  organization: 'The Company'
#  region: 'China'
exporter_is_install: false # Whether to install prometheus exporter.
consul_public_register: false # Whether register a exporter service with public consul client.
consul_public_exporter_token: '00000000-0000-0000-0000-000000000000' # Public Consul client ACL token.
consul_public_http_prot: 'https' # The consul Hypertext Transfer Protocol.
consul_public_http_port: '8500' # The consul HTTP API port.
consul_public_clients: # List of public consul clients.
  - '127.0.0.1'
